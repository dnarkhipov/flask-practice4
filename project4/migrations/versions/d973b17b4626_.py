"""empty message

Revision ID: d973b17b4626
Revises: 
Create Date: 2021-01-07 18:22:46.756852

"""
from alembic import op
import sqlalchemy as sa

import json
from project4.data.data import goals, teachers


# revision identifiers, used by Alembic.
revision = 'd973b17b4626'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    goals_tbl = op.create_table('goals',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=80), nullable=False),
    sa.Column('description_ru', sa.String(length=80), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    teachers_tbl = op.create_table('teachers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=120), nullable=False),
    sa.Column('about', sa.Text(), nullable=False),
    sa.Column('rating', sa.Float(), nullable=False),
    sa.Column('picture', sa.String(length=200), nullable=False),
    sa.Column('price', sa.Integer(), nullable=False),
    sa.Column('free', sa.String(length=500), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('booking_requests',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('client_weekday', sa.String(length=80), nullable=False),
    sa.Column('client_time', sa.String(length=5), nullable=False),
    sa.Column('teacher_id', sa.Integer(), nullable=True),
    sa.Column('client_name', sa.String(length=80), nullable=False),
    sa.Column('client_phone', sa.String(length=50), nullable=False),
    sa.ForeignKeyConstraint(['teacher_id'], ['teachers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('search_requests',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('goal_id', sa.Integer(), nullable=True),
    sa.Column('time_limit', sa.String(length=30), nullable=False),
    sa.Column('client_name', sa.String(length=80), nullable=False),
    sa.Column('client_phone', sa.String(length=50), nullable=False),
    sa.ForeignKeyConstraint(['goal_id'], ['goals.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    teacher_goals_tbl = op.create_table('teacher_goals',
    sa.Column('goal_id', sa.Integer(), nullable=True),
    sa.Column('teacher_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['goal_id'], ['goals.id'], ),
    sa.ForeignKeyConstraint(['teacher_id'], ['teachers.id'], )
    )
    # ### end Alembic commands ###

    # вспомогательный словарь с присвоенными id для целей
    goals_id = {goal[1]: (goal[0], goals[goal[1]]) for goal in enumerate(goals)}

    op.bulk_insert(
        goals_tbl,
        [dict(
            id=goal[0],
            name=goal_name,
            description_ru=goal[1]
        ) for goal_name, goal in goals_id.items()]
    )

    for teacher in teachers:
        op.bulk_insert(
            teachers_tbl,
            [dict(
                id=teacher['id'],
                name=teacher['name'],
                about=teacher['about'],
                rating=teacher['rating'],
                picture=teacher['picture'],
                price=teacher['price'],
                free=json.dumps(teacher['free'])
            )]
        )
        op.bulk_insert(
            teacher_goals_tbl,
            [dict(
                goal_id=goals_id[goal][0],
                teacher_id=teacher['id']
            ) for goal in teacher.get('goals', [])]
        )


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('teacher_goals')
    op.drop_table('search_requests')
    op.drop_table('booking_requests')
    op.drop_table('teachers')
    op.drop_table('goals')
    # ### end Alembic commands ###
